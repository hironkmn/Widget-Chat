body,
html {
    height: 100%;
    overflow: hidden;
    font-family: sans-serif;
}

.messages {
    position: absolute;
    inset: 0;
    display: flex;
    flex-direction: column;
    gap: 10px;
    top: auto;
}

.message {
    border: solid 1px black;
    overflow: hidden;
    animation: MessageIn 0.8s;
}

.meta {
    display: flex;
    color: var(--color);
    align-items: center;
    font-weight: bold;
}

.badges {
    display: flex;
    align-items: center;
}

.badges img {
    width: 1rem;
    height: 1rem;
    margin-right: 0.3rem;
}

@mixin glitchCopy {
    content: attr(data-name);
    position: absolute;
    top: 0;
    left: 0;
    width: 50%;
    height: 50%;
}

.name {
    position: relative;
    letter-spacing: 0.5em;
    animation: glitch-skew 1s infinite linear alternate-reverse;

    &::before {
        @include glitchCopy;
        left: 2px;
        text-shadow: -2px 0 #ff00c1;
        clip: rect(44px, 450px, 56px, 0);
        animation: glitch-anim 5s infinite linear alternate-reverse;
    }

    &::after {
        @include glitchCopy;
        left: -2px;
        text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
        animation: glitch-anim2 1s infinite linear alternate-reverse;
    }
}

.content {
    word-break: break-all;
}

@keyframes MessageIn {
    from {
        transform: translateX(20px);
        opacity: 0;
        max-height: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
        max-height: 400px;
    }
}

@keyframes glitch-anim {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

@keyframes glitch-anim2 {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

@keyframes glitch-skew {
    $steps: 10;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            transform: skew((random(10) - 5) + deg);
        }
    }
}